generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "views"]
}

generator erd {
  provider                  = "prisma-erd-generator"
  includeRelationFromFields = "true"
  theme                     = "neutral"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
  extensions        = [postgis]
}

model study {
  slug                 String
  name                 String
  description          String
  details              String?
  image_src            String?
  centroid_coordinates Float[]            @default([0, 0])
  zoom_level_start     Int                @default(14)
  bbox                 Float[]            @default([0, 0, 0, 0])
  study_scale          study_scale
  study_geometries     geometries[]
  metrics              metrics[]
  metrics_metadata     metrics_metadata[]
  scenarios            scenario[]
  theme                theme[]

  @@id([slug])
}

model theme {
  slug             String
  name             String
  study            study              @relation(fields: [study_slug], references: [slug])
  study_slug       String
  metrics_metadata metrics_metadata[]

  @@id([study_slug, slug])
  @@index([study_slug])
}

model scenario {
  id               Int                @id @default(autoincrement())
  name             String
  description      String?
  methodology      String?
  study            study              @relation(fields: [study_slug], references: [slug])
  study_slug       String
  slug             String             @unique
  metrics_metadata metrics_metadata[]
}

model geometries {
  name       String                  @id @unique
  study      study                   @relation(fields: [study_slug], references: [slug])
  study_slug String
  geom       Unsupported("geometry")

  metrics metrics[] // TODO: Make it clear that this is 1:1

  @@index([study_slug])
}

model metrics_metadata {
  field_name  String
  description String
  units       String
  // map_display   Boolean @default(false)  // TODO: Figure out what to do with this...

  study      study  @relation(fields: [study_slug], references: [slug])
  study_slug String
  theme      theme  @relation(fields: [study_slug, theme_slug], references: [study_slug, slug])
  theme_slug String

  category    String?
  usage       String?
  source      String?
  scenario    scenario? @relation(fields: [scenario_id], references: [id])
  scenario_id Int?
  // @@index([map_display])

  @@id([study_slug, field_name])
}

model metrics {
  study        study      @relation(fields: [study_slug], references: [slug])
  study_slug   String
  geometry_key String
  data         Json
  geometry     geometries @relation(fields: [geometry_key], references: [name])

  @@id([study_slug, geometry_key])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view geography_columns {
  f_table_catalog    Unsupported("name")?
  f_table_schema     Unsupported("name")?
  f_table_name       Unsupported("name")?
  f_geography_column Unsupported("name")?
  coord_dimension    Int?
  srid               Int?
  type               String?

  @@ignore
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view geometry_columns {
  f_table_catalog   String?              @db.VarChar(256)
  f_table_schema    Unsupported("name")?
  f_table_name      Unsupported("name")?
  f_geometry_column Unsupported("name")?
  coord_dimension   Int?
  srid              Int?
  type              String?              @db.VarChar(30)

  @@ignore
}

enum study_scale {
  Municipality
  Building
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

generator erd {
  provider                  = "prisma-erd-generator"
  includeRelationFromFields = "true"
  theme                     = "neutral"
}

datasource db {
  provider   = "postgresql"
  url        = env("POSTGRES_PRISMA_URL")
  directUrl  = env("POSTGRES_URL_NON_POOLING")
  extensions = [postgis]
}

/// Retrieved from the `metadata` worksheet of a study spreadsheet
model study {
  slug                    String
  name                    String
  description             String
  details                 String?
  image_src               String?
  centroid_coordinates    Float[]                  @default([0, 0])
  zoom_level_start        Int                      @default(14)
  bbox                    Float[]                  @default([0, 0, 0, 0])
  highlight               Boolean                  @default(false)
  key_field               String
  name_field              String
  scale                   study_scale
  geometries              geometries[]
  metrics                 metrics[]
  metrics_metadata        metrics_metadata[]
  scenarios               scenario[]
  theme                   theme[]
  scenario_metrics        scenario_metrics[]
  scenario_metrics_totals scenario_metrics_total[]

  @@id([slug])
}

// TODO: Verify that we'll want to display info about a theme
model theme {
  slug       String
  name       String
  study      study  @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug String
  // metrics_metadata metrics_metadata[]

  @@id([study_slug, slug])
  @@index([study_slug])
}

/// 
model scenario {
  slug                    String                   @id
  name                    String
  description             String?
  methodology             String?
  study                   study                    @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug              String
  metrics_metadata        metrics_metadata[]
  scenario_metrics        scenario_metrics[]
  scenario_metrics_totals scenario_metrics_total[]
}

model geometries {
  name                String
  study               study                   @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug          String
  geom                Unsupported("geometry")
  metrics             metrics?                @relation(fields: [metricsStudy_slug, metricsGeometry_key], references: [study_slug, geometry_key])
  metricsStudy_slug   String?
  metricsGeometry_key String?

  @@id([study_slug, name])
  @@index([study_slug])
}

model metrics_metadata {
  field_name  String
  description String
  units       String
  // map_display   Boolean @default(false)  // TODO: Figure out what to do with this...

  study      study  @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug String
  // theme      theme  @relation(fields: [study_slug, theme_slug], references: [study_slug, slug])
  theme_slug String

  category      String
  usage         String?
  source        String?
  scenario      scenario? @relation(fields: [scenario_slug], references: [slug])
  scenario_slug String?
  // @@index([map_display])

  @@id([study_slug, field_name])
}

model metrics {
  study        study        @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug   String
  // geometry     geometries @relation(fields: [study_slug, geometry_key], references: [study_slug, name])
  geometry_key String
  // TODO: Consider validating that keys are valid fields as per fields metric_metadata
  data         Json
  geometries   geometries[]

  @@id([study_slug, geometry_key])
}

model scenario_metrics {
  study      study  @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug String

  scenario      scenario @relation(fields: [scenario_slug], references: [slug])
  scenario_slug String

  // geometry     geometries @relation(fields: [study_slug, geometry_key], references: [study_slug, name])
  geometry_key String
  data         Json

  @@id([study_slug, scenario_slug, geometry_key])
}

model scenario_metrics_total {
  study      study  @relation(fields: [study_slug], references: [slug], onDelete: Cascade)
  study_slug String

  scenario      scenario @relation(fields: [scenario_slug], references: [slug])
  scenario_slug String

  // geometry     geometries @relation(fields: [study_slug, geometry_key], references: [study_slug, name])
  data Json

  @@id([study_slug, scenario_slug])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum study_scale {
  Municipality
  Building
}
